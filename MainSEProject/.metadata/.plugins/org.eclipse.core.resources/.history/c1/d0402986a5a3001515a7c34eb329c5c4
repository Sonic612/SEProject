package Graphics.Services;

import java.io.IOException;
import java.text.DecimalFormat;
import java.text.ParsePosition;

import Graphics.graphicsStart;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.control.TextFormatter;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;

public class NewServiceController {
	
	/**
	 * This is the Decimal Formatter for the initialization process.
	 */
	@FXML
	DecimalFormat format = new DecimalFormat("#");
	
	/**
	 * This is the Decimal Formatter for the initialization process.
	 */
	@FXML
	DecimalFormat money = new DecimalFormat("$0.00");
	
	@FXML
	private TextField servCodeField;

	@FXML
	private TextField servNameField;

	@FXML
	private TextField servFeeField;
	
	/**
	 * The initialization of this controller. Sets up formats for text fields.
	 */
	@FXML
	void initialize() {
		servCodeField.setTextFormatter(new TextFormatter<>(c -> {
			if (c.getControlNewText().isEmpty()) {
				return c;
			}

			ParsePosition parsePosition = new ParsePosition(0);
			Object object = format.parse(c.getControlNewText(), parsePosition);

			if (object == null || parsePosition.getIndex() < c.getControlNewText().length()) {
				return null;
			} else if (c.getControlNewText().length() > 4) {
				return null;
			} else {
				return c;
			}
		}));
		servFeeField.setTextFormatter(new TextFormatter<>(c -> {
			if (c.getControlNewText().isEmpty()) {
				return c;
			}
			ParsePosition parsePosition = new ParsePosition(0);
			Object object = money.parse(c.getControlNewText(), parsePosition);

			if (object == null || parsePosition.getIndex() < c.getControlNewText().length()) {
				return null;
			} else if (c.getControlNewText().length() > 5) {
				return null;
			} else {
				return c;
			}
		}));
	}
	
	@FXML
	void onSubmitClick(ActionEvent event) {
		if (checkEmptyErrors()) {

			buttonReset.setVisible(true);
			int zipCode = Integer.parseInt(zipCodeField.getText());
			int memID = Integer.parseInt(memIDField.getText());
			fullName = lNameField.getText() + ", " + fNameField.getText();

			Pane paneArea = new Pane();
			Label label;

			try {
				paneArea = (Pane) FXMLLoader.load(graphicsStart.class.getResource("gui/Messages/AreYouSureMenu.fxml"));
			} catch (IOException e1) {
				e1.printStackTrace();
			}

			label = (Label) paneArea.getChildren().get(2);
			setLabel(label);
			buttonYes = (Button) paneArea.getChildren().get(0);
			onYesClick(buttonYes, zipCode, memID);

			Stage s = new Stage();
			s.setScene(new Scene(paneArea));
			s.show();
		}
	}

	@FXML
	void onCancelClick(ActionEvent event) {
		Stage s = new Stage();

		Pane mainpane = null;
		try {
			mainpane = (Pane) FXMLLoader
					.load(graphicsStart.class.getResource("gui/Services/ServiceOptionsMenu.fxml"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		s.setScene(new Scene(mainpane));
		s.setTitle("Service Menu");
		s.show();

		Node source = (Node) event.getSource();
		Stage stage = (Stage) source.getScene().getWindow();
		stage.close();
	}
	
	/**
	 * Returns true if all text fields are filled in.
	 * 
	 * @return
	 */
	@FXML
	boolean checkEmptyErrors() {
		String fullStringError = "\nA Member ID" + "\nA Last Name" + "\nA First Name";
		String errorString = "";

		if (servCodeField.getText().isEmpty()) {
			errorString = errorString + "\nA Service Code";
		}
		if (servNameField.getText().isEmpty()) {
			errorString = errorString + "\nA Service Name";
		}
		if (servFeeField.getText().isEmpty()) {
			errorString = errorString + "\nA Service Fee";
		}

		if (errorString.equals(fullStringError)) {
			error("\nEverything!");
			return false;
		} else if (!errorString.isEmpty()) {
			error(errorString);
			return false;
		} else {
			return true;
		}

	}

}
